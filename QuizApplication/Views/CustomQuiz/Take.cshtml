@model QuizApplication.ViewModels.TakeCustomQuizViewModel
@{
    ViewData["Title"] = "Take Quiz";
}

<div class="container-fluid px-2 px-md-4">
    <div class="row justify-content-center">
        <div class="col-12 col-xl-10">
            <!-- Quiz Header -->
            <div class="card shadow-sm mb-3 border-0">
                <div class="card-header bg-gradient-success text-white py-3">
                    <div class="row align-items-center g-2">
                        <div class="col-12 col-md-8">
                            <h4 class="mb-0">
                                <i class="fas fa-play-circle me-2"></i>
                                <span class="d-inline d-md-inline">@Model.Title</span>
                            </h4>
                        </div>
                        <div class="col-12 col-md-4 text-md-end">
                            <span class="badge bg-light text-dark fs-6 px-3 py-2">
                                <i class="fas fa-clock me-1"></i>@Model.TimeLimit min
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            @if (Model.Questions == null || !Model.Questions.Any())
            {
                <div class="alert alert-warning shadow-sm">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    No questions available in this quiz yet.
                </div>
            }
            else
            {
                <form asp-action="Submit" method="post" id="quizForm">
                    <input type="hidden" name="customQuizId" value="@Model.CustomQuizId" />

                    @foreach (var q in Model.Questions.OrderBy(q => q.QuestionOrder))
                    {
                        <div class="card mb-3 shadow-sm border-0 question-card">
                            <div class="card-header bg-transparent border-bottom">
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="badge bg-primary">Question @q.QuestionOrder of @Model.Questions.Count</span>
                                    <span class="text-muted small">Required</span>
                                </div>
                            </div>
                            <div class="card-body p-3 p-md-4">
                                <h5 class="card-title mb-4 text-dark">@q.QuestionText</h5>
                                <div class="row g-3">
                                    <div class="col-12 col-md-6">
                                        <div class="form-check option-card p-3 rounded">
                                            <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" id="q@q.QuestionId_o1" value="Option1">
                                            <label class="form-check-label w-100 cursor-pointer" for="q@q.QuestionId_o1">
                                                <strong class="text-primary me-2">A.</strong>@q.Option1
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <div class="form-check option-card p-3 rounded">
                                            <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" id="q@q.QuestionId_o2" value="Option2">
                                            <label class="form-check-label w-100 cursor-pointer" for="q@q.QuestionId_o2">
                                                <strong class="text-primary me-2">B.</strong>@q.Option2
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <div class="form-check option-card p-3 rounded">
                                            <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" id="q@q.QuestionId_o3" value="Option3">
                                            <label class="form-check-label w-100 cursor-pointer" for="q@q.QuestionId_o3">
                                                <strong class="text-primary me-2">C.</strong>@q.Option3
                                            </label>
                                        </div>
                                    </div>
                                    <div class="col-12 col-md-6">
                                        <div class="form-check option-card p-3 rounded">
                                            <input class="form-check-input" type="radio" name="answers[@q.QuestionId]" id="q@q.QuestionId_o4" value="Option4">
                                            <label class="form-check-label w-100 cursor-pointer" for="q@q.QuestionId_o4">
                                                <strong class="text-primary me-2">D.</strong>@q.Option4
                                            </label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Submit Section -->
                    <div class="card shadow-sm border-0 mb-4 sticky-bottom">
                        <div class="card-body bg-transparent p-3">
                            <div class="d-grid gap-2 d-md-flex justify-content-md-between align-items-center">
                                <a asp-action="Details" asp-route-id="@Model.CustomQuizId" class="btn btn-outline-secondary btn-lg order-2 order-md-1">
                                    <i class="fas fa-arrow-left me-2"></i>
                                    <span class="d-none d-sm-inline">Back to Details</span>
                                    <span class="d-inline d-sm-none">Back</span>
                                </a>
                                <div class="order-1 order-md-2">
                                    <button type="submit" class="btn btn-success btn-lg px-5 w-100">
                                        <i class="fas fa-check-circle me-2"></i>Submit All Answers
                                    </button>
                                    <small class="text-muted d-block text-center mt-2">
                                        <span id="answeredCount">0</span> of @Model.Questions.Count answered
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            }
        </div>
    </div>
</div>

<style>
    .bg-gradient-success {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
    }

    .question-card {
        transition: all 0.3s ease;
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
    }

    .question-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }

    .option-card {
        border: 2px solid #e9ecef;
        background: rgba(248, 249, 250, 0.5);
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .option-card:hover {
        border-color: #0d6efd;
        background: rgba(13, 110, 253, 0.05);
        transform: scale(1.02);
    }

    .option-card input[type="radio"]:checked + label {
        color: #0d6efd;
        font-weight: 500;
    }

    .option-card:has(input[type="radio"]:checked) {
        border-color: #0d6efd;
        background: rgba(13, 110, 253, 0.1);
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.1);
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .form-check-input {
        width: 1.25em;
        height: 1.25em;
        margin-top: 0.15em;
    }

    .sticky-bottom {
        position: sticky;
        bottom: 0;
        z-index: 1020;
    }

    @@media (max-width: 768px) {
        .card-body {
            padding: 1rem !important;
        }

        .option-card {
            padding: 0.75rem !important;
        }

        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
        }
    }

    /* Smooth scroll */
    html {
        scroll-behavior: smooth;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('quizForm');
            const answeredCountEl = document.getElementById('answeredCount');
            
            function updateAnsweredCount() {
                const questions = document.querySelectorAll('[name^="answers"]');
                const questionIds = new Set();
                questions.forEach(q => questionIds.add(q.name));
                
                let answered = 0;
                questionIds.forEach(name => {
                    if (document.querySelector(`[name="${name}"]:checked`)) {
                        answered++;
                    }
                });
                
                if (answeredCountEl) {
                    answeredCountEl.textContent = answered;
                }
            }

            // Update count when options are selected
            document.querySelectorAll('[name^="answers"]').forEach(radio => {
                radio.addEventListener('change', updateAnsweredCount);
            });

            // Confirm before submit if not all answered
            form.addEventListener('submit', function(e) {
                const totalQuestions = new Set(Array.from(document.querySelectorAll('[name^="answers"]')).map(r => r.name)).size;
                const answeredCount = parseInt(answeredCountEl.textContent);
                
                if (answeredCount < totalQuestions) {
                    if (!confirm(`You have only answered ${answeredCount} out of ${totalQuestions} questions. Submit anyway?`)) {
                        e.preventDefault();
                    }
                }
            });

            updateAnsweredCount();
        });
    </script>
}
